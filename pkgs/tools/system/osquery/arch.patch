diff --git a/CMakeLists.txt b/CMakeLists.txt
index 676dda74..a9aab345 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -125,14 +125,15 @@ else()
     set(CXX_COMPILE_FLAGS "${CXX_COMPILE_FLAGS} -std=c++14 -stdlib=libc++")
   else()
     set(LINUX TRUE)
-    set(CXX_COMPILE_FLAGS "${CXX_COMPILE_FLAGS} -std=c++14 -stdlib=libstdc++")
+    #set(CXX_COMPILE_FLAGS "${CXX_COMPILE_FLAGS} -std=c++14 -stdlib=libstdc++")
+    set(CXX_COMPILE_FLAGS "${CXX_COMPILE_FLAGS} -std=c++14")
   endif()
   set(POSIX TRUE)
 endif()
 
 if(POSIX)
   add_compile_options(
-    -Qunused-arguments
+    #-Qunused-arguments
     -Wstrict-aliasing
     -Wno-missing-field-initializers
     -Wno-unused-local-typedef
@@ -395,6 +396,8 @@ endif()
 
 if(APPLE)
   LOG_PLATFORM("OS X")
+elseif(OSQUERY_BUILD_PLATFORM STREQUAL "nixos")
+  LOG_PLATFORM("NixOS")
 elseif(OSQUERY_BUILD_PLATFORM STREQUAL "debian")
   LOG_PLATFORM("Debian")
 elseif(OSQUERY_BUILD_PLATFORM STREQUAL "ubuntu")
diff --git a/include/osquery/core.h b/include/osquery/core.h
index 839cc34a..553bb945 100644
--- a/include/osquery/core.h
+++ b/include/osquery/core.h
@@ -15,8 +15,9 @@
 #include <string>
 #include <vector>
 
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__linux__)
 #include <boost/thread/shared_mutex.hpp>
+#include <boost/thread/recursive_mutex.hpp>
 #else
 #include <shared_mutex>
 #endif
@@ -182,7 +183,7 @@ inline bool isPlatform(PlatformType a, const PlatformType& t = kPlatformType) {
   return (static_cast<int>(t) & static_cast<int>(a)) != 0;
 }
 
-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__linux__)
 #define MUTEX_IMPL boost
 #else
 #define MUTEX_IMPL std
@@ -198,10 +199,10 @@ using WriteLock = MUTEX_IMPL::unique_lock<Mutex>;
 using ReadLock = MUTEX_IMPL::shared_lock<Mutex>;
 
 /// Helper alias for defining recursive mutexes.
-using RecursiveMutex = std::recursive_mutex;
+using RecursiveMutex = MUTEX_IMPL::recursive_mutex;
 
 /// Helper alias for write locking a recursive mutex.
-using RecursiveLock = std::lock_guard<std::recursive_mutex>;
+using RecursiveLock = MUTEX_IMPL::lock_guard<MUTEX_IMPL::recursive_mutex>;
 }
 
 /**
diff --git a/osquery/CMakeLists.txt b/osquery/CMakeLists.txt
index 10a2b3d9..e60cc05b 100644
--- a/osquery/CMakeLists.txt
+++ b/osquery/CMakeLists.txt
@@ -135,12 +135,14 @@ endif()
 
 if(APPLE OR LINUX)
   ADD_OSQUERY_LINK_CORE("libdl")
-  ADD_OSQUERY_LINK_CORE("boost_system-mt")
-  ADD_OSQUERY_LINK_CORE("boost_filesystem-mt")
-  ADD_OSQUERY_LINK_CORE("boost_context-mt")
+  ADD_OSQUERY_LINK_CORE("boost_system")
+  ADD_OSQUERY_LINK_CORE("boost_filesystem")
+  ADD_OSQUERY_LINK_CORE("boost_thread")
+  ADD_OSQUERY_LINK_CORE("boost_context")
 
-  ADD_OSQUERY_LINK_ADDITIONAL("rocksdb_lite")
-  ADD_OSQUERY_LINK_ADDITIONAL("boost_regex-mt")
+  #ADD_OSQUERY_LINK_ADDITIONAL("rocksdb_lite")
+  ADD_OSQUERY_LINK_ADDITIONAL("rocksdb")
+  ADD_OSQUERY_LINK_ADDITIONAL("boost_regex")
 elseif(FREEBSD)
   ADD_OSQUERY_LINK_CORE("icuuc")
   ADD_OSQUERY_LINK_CORE("boost_system")
@@ -169,6 +171,7 @@ else()
 endif()
 
 if(POSIX)
+  ADD_OSQUERY_LINK_ADDITIONAL("benchmark")
   ADD_OSQUERY_LINK_ADDITIONAL("snappy")
   ADD_OSQUERY_LINK_ADDITIONAL("ssl")
   ADD_OSQUERY_LINK_ADDITIONAL("crypto")
@@ -349,13 +352,13 @@ if(NOT OSQUERY_BUILD_SDK_ONLY)
 
   install(DIRECTORY "${CMAKE_SOURCE_DIR}/packs/"
     DESTINATION "${CMAKE_INSTALL_PREFIX}/share/osquery/packs" COMPONENT main)
-  if(APPLE)
-    install(FILES "${CMAKE_SOURCE_DIR}/tools/deployment/com.facebook.osqueryd.plist"
-      DESTINATION "${CMAKE_INSTALL_PREFIX}/share/osquery/" COMPONENT main)
-  else()
-    install(PROGRAMS "${CMAKE_SOURCE_DIR}/tools/deployment/osqueryd.initd"
-      DESTINATION "/etc/init.d/" RENAME "osqueryd" COMPONENT main)
-  endif()
+  #if(APPLE)
+  #  install(FILES "${CMAKE_SOURCE_DIR}/tools/deployment/com.facebook.osqueryd.plist"
+  #    DESTINATION "${CMAKE_INSTALL_PREFIX}/share/osquery/" COMPONENT main)
+  #else()
+  #  install(PROGRAMS "${CMAKE_SOURCE_DIR}/tools/deployment/osqueryd.initd"
+  #    DESTINATION "/etc/init.d/" RENAME "osqueryd" COMPONENT main)
+  #endif()
 endif()
 
 if(NOT SKIP_TESTS)
diff --git a/osquery/tables/CMakeLists.txt b/osquery/tables/CMakeLists.txt
index 89ca255e..bf5e4a7d 100644
--- a/osquery/tables/CMakeLists.txt
+++ b/osquery/tables/CMakeLists.txt
@@ -58,6 +58,7 @@ if(LINUX)
   set(TABLE_PLATFORM "linux")
 
   ADD_OSQUERY_LINK_ADDITIONAL("libresolv.so")
+  #ADD_OSQUERY_LINK_ADDITIONAL("cryptsetup devmapper")
   ADD_OSQUERY_LINK_ADDITIONAL("cryptsetup devmapper")
   ADD_OSQUERY_LINK_ADDITIONAL("gcrypt gpg-error")
   ADD_OSQUERY_LINK_ADDITIONAL("blkid")
diff --git a/specs/windows/services.table b/specs/windows/services.table
index 4ac24ee9..657d8b99 100644
--- a/specs/windows/services.table
+++ b/specs/windows/services.table
@@ -12,7 +12,7 @@ schema([
     Column("path", TEXT, "Path to Service Executable"),
     Column("module_path", TEXT, "Path to ServiceDll"),
     Column("description", TEXT, "Service Description"),
-    Column("user_account", TEXT, "The name of the account that the service process will be logged on as when it runs. This name can be of the form Domain\UserName. If the account belongs to the built-in domain, the name can be of the form .\UserName."),
+    Column("user_account", TEXT, "The name of the account that the service process will be logged on as when it runs. This name can be of the form Domain\\UserName. If the account belongs to the built-in domain, the name can be of the form .\\UserName."),
 ])
 implementation("system/windows/services@genServices")
 examples([
